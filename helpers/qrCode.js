const QRCode = require("qrcode")

const generateQrCode = async ({ event, ticketNumber, token }) => {
Â  Â  // Destructure token from the input object
Â  Â  if (!token) {
Â  Â  Â  Â  throw new Error("Token is required for QR code generation.");
Â  Â  }
Â  Â   const eventId = event._id || event;
Â  Â  try {
Â  Â  Â  Â  // ðŸ”¹ STEP 1: Create secure payload as JSON string
Â  Â  Â  Â  const qrPayload = JSON.stringify({
Â  Â  Â  Â  Â  Â  event: eventId, // Use the destructured event property
Â  Â  Â  Â  Â  Â  ticketNumber: ticketNumber, // Use the destructured ticketNumber property
Â  Â  Â  Â  Â  Â  token: token // Use the destructured token property
Â  Â  Â  Â  });

Â  Â  Â  Â  // ðŸ”¹ STEP 2: Generate QR code (Base64)
Â  Â  Â  Â  const qrCodeData = await QRCode.toDataURL(qrPayload, {
Â  Â  Â  Â  Â  Â  errorCorrectionLevel: 'H', // high correction for scanning reliability
Â  Â  Â  Â  Â  Â  width: 300,
Â  Â  Â  Â  Â  Â  margin: 2,
            type: 'image/png',
            color: {
                dark: '#000000', // Black modules
                light: '#FFFFFF' // White background
            }
Â  Â  Â  Â  });

        return qrCodeData; // Missing return added

Â  Â  } catch (error) {
        console.error("Error generating QR code:", error);
        // Fallback for failure: Return an empty string
Â  Â  Â  Â  return "";
Â  Â  }
};

module.exports = generateQrCode;